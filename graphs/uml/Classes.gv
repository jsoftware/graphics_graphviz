digraph cms {
	node [shape=record,fontname="Arial",fontsize=9,fillcolor=white]
	edge [fontname="Helvetica",fontsize=9,labelfontname="Arial",labelfontsize=9]
	"article" [label="{\
article\
|\
+id:integer\l\
+title:text = [no title]\l\
+lead:text\l\
+body:text\l\
+created:timestamp\l\
+updated:timestamp\l\
+author:writer[1]\l\
+categories:category[*]\l\
|\
+validatearticle( errorcode:integer[1]\l ):boolean\l\
+getauthor():writer\l\
+setauthor( author:writer ):boolean\l\
+persistarticle():boolean\l\
+deletearticle():boolean\l\
+validateandsave():boolean\l\
}"]
	"article"->"category" [taillabel="* categories",headlabel="* articles",arrowhead=none];
	"writer" [label="{writer|+id:integer\l+alias:text\l+user_account:user_account[1]\l+picture:blob\l+picture_type:text\l+lastarticle:article[0..1]\l+articles:article[*]\l|+getarticles():article[*]\l+persistwriter():boolean\l+addarticle( article:article ):boolean\l+setpicture( picture:string )\l+setpicturefromfile( file_name:string )\l+undefinepicture()\l+getpicture( picture:string[1],\l undefined:boolean[1] )\l+getpictureintofile( file_name:string,\l undefined:boolean[1] )\l+outputpicture( undefined:boolean[1] )\l}"]
	"writer"->"article" [taillabel="* articles",headlabel="1 author",arrowhead=none];
	"category" [label="{category|+id:integer\l+name:text\l+description:text\l+articles:article[*]\l|+addarticle( article:article ):boolean\l+removearticle( article:article\l ):boolean\l+getarticlesbytitleandauthor(\l title:text, author:text ):article[*]\l+getarticlesofauthoruser(\l author:user_account ):article[*]\l}"]
	cms [label="{cms|+error:string\l+database:integer\l+connection:string\l+includepath:string\l+debug:boolean\l+debugoutput:string\l|+initialize():boolean\l+finalize():boolean\l+createarticle():article\l+getallarticles():article[*]\l+getarticle( article:integer ):article\l+createwriter():writer\l+getwriter( writer:integer ):writer\l+getallwriters():writer[*]\l+getarticlesincategory(\l category:category ):article[*]\l+getarticlesnotincategory(\l category:category ):article[*]\l+getarticlesofwriter( writer:writer\l ):article[*]\l+getarticlesnotofwriter( writer:writer\l ):article[*]\l+begin():boolean\l+end( commit:boolean ):boolean\l}",color=blue]
	cmsschema [label="{cmsschema|+error:string\l+connection:string\l+includepath:string\l+schemapath:string\l+databasename:string\l+createdatabase:boolean\l|+installschema():boolean\l}",color=blue]
	"createarticleform" [label="{createarticleform|+errormessage:string\l+processed:boolean\l+error:string\l+article:article\l+canceled:boolean\l+text:hash\l+author:writer\l+images:string\l|+initialize( cms ):boolean\l+process():boolean\l+output():string\l}",color=blue]
	"createarticleform"->"article" [taillabel="0..1 article",headlabel="",arrowhead=none]
	"createarticleform"->"writer" [taillabel="0..1 author",headlabel="",arrowhead=none]
	"articlesreport" [label="{articlesreport|+error:string\l+database:integer\l+connection:string\l+includepath:string\l+debug:boolean\l+debugoutput:string\l|+initialize():boolean\l+finalize():boolean\l+getlatestarticles(\l startdate:timestamp, articles:array[1],\l total:integer[1] ):boolean\l}",color=blue]
// source http://www.meta-language.net/metastorage.html
}
